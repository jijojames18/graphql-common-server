enum FilterType {
  email
  phone_number
}

input UserInput {
  name: String!
  email: String!
  phoneNumber: String!
}

type Query {
  getUser(type: FilterType, needle: String): User
  getAll(limit: Int, offset: Int): UserList
}

type Mutation {
  createUser(input: UserInput!): UserUpdateResponse
  updateUser(input: UserInput!): UserUpdateResponse
  deleteUser(email: String!): Boolean
}

type User {
  id: ID!
  name: String!
  email: String!
  phoneNumber: String!
  createdAt: Int!
}

type UserList {
  users: [User!]!
  totalCount: Int!
}

type UserUpdateResponse {
  code: Int!
  message: String!
  user: User
}
